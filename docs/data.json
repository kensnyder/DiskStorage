{
    "project": {
        "name": "DiskStorage",
        "description": "A high performance wrapper for localStorage that sessionStorage that stores non-string data by serializing via JSON",
        "version": "3.0.1",
        "url": "https://github.com/kensnyder/DiskStorage"
    },
    "files": {
        "src/DiskStorage.js": {
            "name": "src/DiskStorage.js",
            "modules": {},
            "classes": {
                "DiskStorage": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "DiskStorage": {
            "name": "DiskStorage",
            "shortname": "DiskStorage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/DiskStorage.js",
            "line": 5,
            "description": "Initialize a new store with the given options",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "If a string, it will be interpretted as options.name (see below)",
                    "type": "Object|String",
                    "optional": true,
                    "props": [
                        {
                            "name": "engine",
                            "description": "\"localStorage\" or \"sessionStorage\"",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"localStorage\""
                        },
                        {
                            "name": "prefix",
                            "description": "The prefix for the data key that is actually stored in localStorage or sessionStorage",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"DSto\""
                        },
                        {
                            "name": "name",
                            "description": "The namespace that distinguishes this instance from others",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"default\""
                        },
                        {
                            "name": "flushDebounceMs",
                            "description": "The number of milliseconds delay before flushing data to disk",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "15"
                        },
                        {
                            "name": "importKey",
                            "description": "The name of a localStorage key to import data from if it exists",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "DiskStorage"
            }
        }
    },
    "classitems": [
        {
            "file": "src/DiskStorage.js",
            "line": 59,
            "description": "The DiskStorage version",
            "itemtype": "attribute",
            "name": "version",
            "type": "{String}",
            "static": 1,
            "class": "DiskStorage"
        },
        {
            "file": "src/DiskStorage.js",
            "line": 67,
            "description": "True if flush should write to disk",
            "itemtype": "property",
            "name": "isDirty",
            "type": "{Boolean}",
            "class": "DiskStorage"
        },
        {
            "file": "src/DiskStorage.js",
            "line": 72,
            "description": "The prefix for the data key that is actually stored in localStorage or sessionStorage",
            "itemtype": "property",
            "name": "prefix",
            "type": "{String}",
            "class": "DiskStorage"
        },
        {
            "file": "src/DiskStorage.js",
            "line": 77,
            "description": "The namespace of the store",
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "class": "DiskStorage"
        },
        {
            "file": "src/DiskStorage.js",
            "line": 82,
            "description": "\"localStorage\" or \"sessionStorage\"",
            "itemtype": "property",
            "name": "engine",
            "type": "{String}",
            "class": "DiskStorage"
        },
        {
            "file": "src/DiskStorage.js",
            "line": 87,
            "description": "The data",
            "itemtype": "property",
            "name": "data",
            "type": "{Object}",
            "class": "DiskStorage"
        },
        {
            "file": "src/DiskStorage.js",
            "line": 94,
            "description": "Store data for later retreival",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "key",
                    "description": "The name of the value",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The data to store",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "DiskStorage"
            },
            "chainable": 1,
            "class": "DiskStorage"
        },
        {
            "file": "src/DiskStorage.js",
            "line": 110,
            "description": "Get a previously stored value",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "key",
                    "description": "The name of the value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "class": "DiskStorage"
        },
        {
            "file": "src/DiskStorage.js",
            "line": 121,
            "description": "Check if a particular key has a value (even undefined)",
            "itemtype": "method",
            "name": "has",
            "params": [
                {
                    "name": "key",
                    "description": "The name of the value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "DiskStorage"
        },
        {
            "file": "src/DiskStorage.js",
            "line": 132,
            "description": "Unset a stored value",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "key",
                    "description": "The name to unset",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "DiskStorage"
            },
            "chainable": 1,
            "class": "DiskStorage"
        },
        {
            "file": "src/DiskStorage.js",
            "line": 147,
            "description": "Unset all values",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "",
                "type": "DiskStorage"
            },
            "chainable": 1,
            "class": "DiskStorage"
        },
        {
            "file": "src/DiskStorage.js",
            "line": 161,
            "description": "Flush to disk (localStorage or sessionStorage).\nUsing this function is not normally necessary. Chanages to data are automatically queued for flush (in 15ms).",
            "itemtype": "method",
            "name": "flush",
            "return": {
                "description": "",
                "type": "DiskStorage"
            },
            "chainable": 1,
            "class": "DiskStorage"
        },
        {
            "file": "src/DiskStorage.js",
            "line": 176,
            "description": "Return a copy of the data store",
            "see": [
                "https://jsperf.com/cloning-an-object/2"
            ],
            "itemtype": "method",
            "name": "export",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "DiskStorage"
        },
        {
            "file": "src/DiskStorage.js",
            "line": 187,
            "description": "Replace the internal data with the one given",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "data",
                    "description": "data to load",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "DiskStorage"
            },
            "chainable": 1,
            "class": "DiskStorage"
        },
        {
            "file": "src/DiskStorage.js",
            "line": 202,
            "description": "Return a new DiskStorage object with the same keys and values",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "name",
                            "description": "The namespace that distinguishes this instance from others",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"default\""
                        },
                        {
                            "name": "engine",
                            "description": "\"localStorage\" or \"sessionStorage\"",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"localStorage\""
                        },
                        {
                            "name": "prefix",
                            "description": "The prefix for the data key that is actually stored in localStorage or sessionStorage",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"__DS__\""
                        },
                        {
                            "name": "flushDebounceMs",
                            "description": "The number of milliseconds delay before flushing data to disk",
                            "type": "String",
                            "optional": true,
                            "optdefault": "15"
                        },
                        {
                            "name": "importKey",
                            "description": "The name of a localStorage key to import from if it exists",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "DiskStorage"
            },
            "class": "DiskStorage"
        },
        {
            "file": "src/DiskStorage.js",
            "line": 225,
            "description": "Clear the data and remove the DiskStorage data from localStorage/sessionStorage",
            "itemtype": "method",
            "name": "destroy",
            "return": {
                "description": "",
                "type": "DiskStorage"
            },
            "chainable": 1,
            "class": "DiskStorage"
        },
        {
            "file": "src/DiskStorage.js",
            "line": 240,
            "description": "Return true if localStorage, sessionStorage and JSON are available",
            "itemtype": "method",
            "name": "isSupported",
            "static": 1,
            "return": {
                "description": "True if browser will support DiskStorage",
                "type": "Boolean"
            },
            "class": "DiskStorage"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/DiskStorage.js:161"
        }
    ]
}